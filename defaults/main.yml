#
# enable/disable features
#

# unattended upgrades
generic_manage_unattended_upgrade: true

# for ldap
generic_manage_ldap: false
ldap_uri: ldap://someldapserver
ldap_basedc: dc=mydomain,dc=cm
ldap_binddn:  cn=admin,dcmydomain,dc=com
ldap_bindpw: somepassword

#
# Defaults for SMTP smarthost
#

# if false, we don't touch smtp config
generic_manage_smtp: true

# sender domain
smtp_sender_fqdn: localdomain
# SMTP server to use
smtp_upstream: smtp.localdomain
# smtp system user receiver - name of the system user to receive mails for "root"
smtp_root_alias: root

# Subenet to relay for - empty for none
smtp_relay_subnet: ""
# listen for connections. Empty for all interfaces, defaults to localhost only
smtp_listen_interface: "127.0.0.1 ; ::1"

#
# Defaults for handling apt repos and other apt config
#

# if false, we don't touch apt config
generic_manage_apt: true

# proxy to use, if undefined - it is unused
#apt_proxy_url: <someproxy:port>

# releases
apt_current_testing: stretch
apt_current_stable: jessie
apt_default_release: "{{apt_current_stable}}"

# components
apt_components:
  - main

apt_other_repos:

# servers to fetch from
apt_default_repo_path: http://cdn.debian.net/debian/
apt_security_repo_path: http://security.debian.org/

#apt_release: "{{ apt_default_release }}"

# include repos from testing
apt_include_testing: true

# add local repo
apt_local_repo_enable: false
apt_local_repo_list: 
- "deb http://localserver/ buster compA"
- "deb http://localserver/ buster compB"
apt_local_repo_key_url: http://localserver/pubkey.gpg
apt_local_repo_list_file: localrepo

#
# defaults for handling firewall rules
#
generic_manage_firewall: true

# drop ip4 or ip6 in iptables.
# don't use both, and tweak sysctl also
firewall_drop_all_ip6: true
firewall_drop_all_ip4: false

# blanked ACCEPT outgoing to this IP range.
# use 0.0.0.0/0 for everything, or empty for none
# e.g firewall_allow_all_output_network: 0.0.0.0/0
firewall_allow_all_output_network:

# Limit SMTP, DNS and so on to acces this network only
firewall_server_network: 0.0.0.0/0
# add rules to allow dhcp
firewall_allow_dhcp: true
# allow certain outgping stuff
firewall_outgoing_services:
  - {name: SMTP,    proto: tcp, port: 25, comment: "outgoing mails"}
  - {name: HTTP,    proto: tcp, port: 80, comment: "outgoing e.g. for updates"}
  - {name: DNS/udp, proto: udp, port: 53, comment: "outgoing DNS using UDP"}
  - {name: DNS/tcp, proto: tcp, port: 53, comment: "outgoing DNS using TCP"}
# allow certain incoming stuff.
# - SSH and ping is always enabled
# - DHCP has its own switch
firewall_incoming_services: []
# example
#firewall_incoming_services:
#  - {name: SMTP, proto: TCP, port: 25, limit: "60/min", burst: 5, comment: "incoming mails"}

#
# defaults for handling sshd
#
generic_manage_sshd: true

# flags for the users:
# warning: Yes and yes is not the same. Use "yes" or "no" - lowercase and with quotes
sshd_users:
  - { username: "{{ansible_ssh_user}}", AllowTcpForwarding: "yes", PermitTTY: "yes" }

#
# defaults for handling networks
# * default false, since it might cause lost of connectvity
generic_manage_network: false

# define interfaces.
# - gateway empty or None => no gateway set
# - static_ip empty or None => dhcp
interfaces:
  ens3:
    subnet:
      description: "int_LAN - internal network"
      gateway: 192.168.0.1
      subnet: "192.168.0.0/24"
    static_ip: 192.168.0.10
